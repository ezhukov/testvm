- name: check if {{ pkg }} folder exists
  stat:
    path: "{{ pkg }}"
  register: pkg_folder

- name: debcheckout {{ pkg }}
  command: debcheckout "{{ pkg }}"
  when: not pkg_folder.stat.exists

- name: find {{ pkg }} binaries
  shell: >
    grep -E "(Package:|Architecture:)" debian/control
    | cut -d " " -f2
    | sed -e "N; s/\n/_$(dpkg-parsechangelog -SVersion)_/"
    -e "/_/ { s/any/{{ arch }}/ }"
  args:
    chdir: "{{ pkg }}"
  register: debs
  changed_when: false

- name: check if {{ pkg }} was already built
  stat:
    path: "{{ debs.stdout_lines[0] }}.deb"
  register: built

- name: install {{ pkg }} build-dependencies
  shell: yes | mk-build-deps -ir "{{ pkg }}"
  become: yes
  when: not built.stat.exists

- name: build {{ pkg }}
  command: dpkg-buildpackage -uc -us -b
  args:
    chdir: "{{ pkg }}"
  when: not built.stat.exists

- name: remove {{ pkg }} build dependencies
  apt:
    state: absent
    name: "{{ pkg }}-build-deps"
    autoremove: yes
  become: yes
